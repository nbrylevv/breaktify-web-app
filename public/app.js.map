{"version":3,"file":"app.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../node_modules/intl-messageformat-parser/lib/types.js","../node_modules/intl-messageformat-parser/lib/parser.js","../node_modules/intl-messageformat-parser/lib/normalize.js","../node_modules/intl-messageformat-parser/lib/skeleton.js","../node_modules/intl-messageformat-parser/lib/index.js","../node_modules/intl-format-cache/lib/index.js","../node_modules/intl-messageformat/lib/formatters.js","../node_modules/intl-messageformat/lib/core.js","../node_modules/svelte-i18n/dist/runtime.esm.js","../src/components/Button.svelte","../src/components/PlayStopIcon.svelte","../src/consts/states.js","../src/stores/state.js","../src/utils/ls-helper.js","../src/stores/notification-settings.js","../src/views/Panel.svelte","../src/components/Input.svelte","../src/components/Select.svelte","../src/consts/sounds.js","../src/consts/languages.js","../src/consts/themes.js","../src/utils/theme-catcher.js","../src/stores/app-settings.js","../src/views/Settings.svelte","../src/components/Link.svelte","../src/views/Links.svelte","../src/views/NoBrowserSupport.svelte","../src/utils/notifications.js","../src/views/AllowNotifications.svelte","../src/App.svelte","../src/plugins/i18n.js","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = \"#\";\n    var peg$c3 = peg$literalExpectation(\"#\", false);\n    var peg$c4 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c5 = peg$otherExpectation(\"argumentElement\");\n    var peg$c6 = \"{\";\n    var peg$c7 = peg$literalExpectation(\"{\", false);\n    var peg$c8 = \"}\";\n    var peg$c9 = peg$literalExpectation(\"}\", false);\n    var peg$c10 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c12 = /^['\\/{}]/;\n    var peg$c13 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c14 = peg$anyExpectation();\n    var peg$c15 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c16 = \"/\";\n    var peg$c17 = peg$literalExpectation(\"/\", false);\n    var peg$c18 = function (option) { return option; };\n    var peg$c19 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c20 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c21 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c22 = \"::\";\n    var peg$c23 = peg$literalExpectation(\"::\", false);\n    var peg$c24 = function (skeleton) { return skeleton; };\n    var peg$c25 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c26 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c27 = \",\";\n    var peg$c28 = peg$literalExpectation(\",\", false);\n    var peg$c29 = \"number\";\n    var peg$c30 = peg$literalExpectation(\"number\", false);\n    var peg$c31 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c32 = \"'\";\n    var peg$c33 = peg$literalExpectation(\"'\", false);\n    var peg$c34 = /^[^']/;\n    var peg$c35 = peg$classExpectation([\"'\"], true, false);\n    var peg$c36 = /^[^a-zA-Z'{}]/;\n    var peg$c37 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c38 = /^[a-zA-Z]/;\n    var peg$c39 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c40 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c41 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c42 = \"date\";\n    var peg$c43 = peg$literalExpectation(\"date\", false);\n    var peg$c44 = \"time\";\n    var peg$c45 = peg$literalExpectation(\"time\", false);\n    var peg$c46 = \"plural\";\n    var peg$c47 = peg$literalExpectation(\"plural\", false);\n    var peg$c48 = \"selectordinal\";\n    var peg$c49 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c50 = \"offset:\";\n    var peg$c51 = peg$literalExpectation(\"offset:\", false);\n    var peg$c52 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c53 = \"select\";\n    var peg$c54 = peg$literalExpectation(\"select\", false);\n    var peg$c55 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c56 = \"=\";\n    var peg$c57 = peg$literalExpectation(\"=\", false);\n    var peg$c58 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c59 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c60 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c61 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c62 = peg$otherExpectation(\"whitespace\");\n    var peg$c63 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c64 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c65 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c66 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c67 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c68 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c69 = peg$otherExpectation(\"number\");\n    var peg$c70 = \"-\";\n    var peg$c71 = peg$literalExpectation(\"-\", false);\n    var peg$c72 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c73 = peg$otherExpectation(\"apostrophe\");\n    var peg$c74 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c75 = \"''\";\n    var peg$c76 = peg$literalExpectation(\"''\", false);\n    var peg$c77 = function () { return \"'\"; };\n    var peg$c78 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c79 = function (x) {\n        return (x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c80 = \"\\n\";\n    var peg$c81 = peg$literalExpectation(\"\\n\", false);\n    var peg$c82 = function (x) {\n        return x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c83 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c84 = peg$otherExpectation(\"argNumber\");\n    var peg$c85 = \"0\";\n    var peg$c86 = peg$literalExpectation(\"0\", false);\n    var peg$c87 = function () { return 0; };\n    var peg$c88 = /^[1-9]/;\n    var peg$c89 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c90 = /^[0-9]/;\n    var peg$c91 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c92 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c93 = peg$otherExpectation(\"argName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parsepoundElement();\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c2;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c3);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c4();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c8;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c9);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c10(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c5);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c12.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c13);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c14);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c12.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c13);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c16;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c17);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c18(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c15);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c20(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c19);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c21(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n            s1 = peg$c22;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c25();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c29) {\n                                    s7 = peg$c29;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c30);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c8;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c9);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c31(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c34.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c35);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c34.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c35);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c32;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c33);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c36.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c37);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c36.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c37);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c38.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c38.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c39);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c40(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n            s1 = peg$c22;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c26(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c42) {\n                                    s7 = peg$c42;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c43);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c44) {\n                                        s7 = peg$c44;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c45);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c8;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c9);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c31(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c46) {\n                                    s7 = peg$c46;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c47);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c48) {\n                                        s7 = peg$c48;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c49);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c50) {\n                                                    s12 = peg$c50;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c51);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c8;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c9);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c52(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c6;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c7);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c27;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c28);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c53) {\n                                    s7 = peg$c53;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c54);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c27;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c28);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c8;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c9);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c55(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c6;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c7);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c58(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c8;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c9);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c59(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c6;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c7);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c60(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c8;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c9);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c61(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c63.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c64);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c62);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c66.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c67);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c65);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c70;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c71);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c72(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c75) {\n            s1 = peg$c75;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c76);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c77();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c74);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c75) {\n                    s5 = peg$c75;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c76);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c34.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c35);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c75) {\n                        s5 = peg$c75;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c76);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c34.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c35);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c32;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c33);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c78(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c79(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c80;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c81);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c82(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c85;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c86);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c88.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c89);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c90.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c91);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c90.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c91);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c92(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c14);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c93);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\+|#+)?)?$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (match, g1, g2) {\n                // precision-integer case\n                if (match === '.') {\n                    result.maximumFractionDigits = 0;\n                }\n                // .000+ case\n                else if (g2 === '+') {\n                    result.minimumFractionDigits = g2.length;\n                }\n                // .### case\n                else if (g1[0] === '#') {\n                    result.maximumFractionDigits = g1.length;\n                }\n                // .00## or .000 case\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits =\n                        g1.length + (typeof g2 === 'string' ? g2.length : 0);\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","import { pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport * from './skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, __spreadArrays([void 0], args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n//# sourceMappingURL=index.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, } from 'intl-messageformat-parser';\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n];\nfunction formatHTMLElement(el, objectParts, values) {\n    var tagName = el.tagName;\n    var outerHTML = el.outerHTML, textContent = el.textContent, childNodes = el.childNodes;\n    // Regular text\n    if (!tagName) {\n        return restoreRichPlaceholderMessage(textContent || '', objectParts);\n    }\n    tagName = tagName.toLowerCase();\n    var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n    var formatFnOrValue = values[tagName];\n    if (formatFnOrValue && isVoidElement) {\n        throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n    }\n    if (!childNodes.length) {\n        return [outerHTML];\n    }\n    var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n        return all.concat(formatHTMLElement(child, objectParts, values));\n    }, []);\n    // Legacy HTML\n    if (!formatFnOrValue) {\n        return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n    }\n    // HTML Tag replacement\n    if (typeof formatFnOrValue === 'function') {\n        return [formatFnOrValue.apply(void 0, chunks)];\n    }\n    return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    var content = domParser\n        .parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html')\n        .getElementById(TEMPLATE_ID);\n    if (!content) {\n        throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!content.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var caseSensitiveTags = tagsToFormat.filter(function (tagName) { return tagName !== tagName.toLowerCase(); });\n    if (caseSensitiveTags.length) {\n        throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n    }\n    // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n    return Array.prototype.slice\n        .call(content.childNodes)\n        .reduce(function (all, child) { return all.concat(formatHTMLElement(child, objectParts, values)); }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { parse } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatHTMLMessage, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.formatHTMLMessage = function (values) {\n            return formatHTMLMessage(_this.ast, _this.locales, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    IntlMessageFormat.defaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","import{writable as n,derived as e}from\"svelte/store\";import t from\"intl-messageformat\";const o=(n,e=\"\")=>{const t={};for(const r in n){const i=e+r;\"object\"==typeof n[r]?Object.assign(t,o(n[r],`${i}.`)):t[i]=n[r]}return t};let r;const i=n({});function a(n){return n in r}function l(n,e){if(a(n)){const t=function(n){return r[n]||null}(n);if(e in t)return t[e]}return null}function s(n,...e){const t=e.map(n=>o(n));i.update(e=>(e[n]=Object.assign(e[n]||{},...t),e))}const c=e([i],([n])=>Object.keys(n));i.subscribe(n=>r=n);const u={};function m(n){return u[n]}function f(n){return E(n).reverse().some(m)}const d={};function w(n){if(!f(n))return;if(n in d)return d[n];const e=function(n){return E(n).reverse().map(n=>{const e=m(n);return[n,e?[...e]:[]]}).filter(([,n])=>n.length>0)}(n);return 0!==e.length?(d[n]=Promise.all(e.map(([n,e])=>Promise.all(e.map(n=>n())).then(e=>{!function(n){delete u[n]}(n),e=e.map(n=>n.default||n),s(n,...e)}))).then(()=>{delete d[n]}),d[n]):void 0}function g(n,e){m(n)||function(n){u[n]=new Set}(n);const t=m(n);m(n).has(e)||(a(n)||i.update(e=>(e[n]={},e)),t.add(e))}\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */function p(n,e){var t={};for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&e.indexOf(o)<0&&(t[o]=n[o]);if(null!=n&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(n);r<o.length;r++)e.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(n,o[r])&&(t[o[r]]=n[o[r]])}return t}const b={fallbackLocale:null,initialLocale:null,loadingDelay:200,formats:{number:{scientific:{notation:\"scientific\"},engineering:{notation:\"engineering\"},compactLong:{notation:\"compact\",compactDisplay:\"long\"},compactShort:{notation:\"compact\",compactDisplay:\"short\"}},date:{short:{month:\"numeric\",day:\"numeric\",year:\"2-digit\"},medium:{month:\"short\",day:\"numeric\",year:\"numeric\"},long:{month:\"long\",day:\"numeric\",year:\"numeric\"},full:{weekday:\"long\",month:\"long\",day:\"numeric\",year:\"numeric\"}},time:{short:{hour:\"numeric\",minute:\"numeric\"},medium:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\"},long:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"},full:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"}}},warnOnMissingMessages:!0};function h(){return b}function y(n){const{formats:e}=n,t=p(n,[\"formats\"]),o=n.initialLocale||n.fallbackLocale;return Object.assign(b,t,{initialLocale:o}),e&&(\"number\"in e&&Object.assign(b.formats.number,e.number),\"date\"in e&&Object.assign(b.formats.date,e.date),\"time\"in e&&Object.assign(b.formats.time,e.time)),j.set(o)}const O=n(!1);let v;const j=n(null);function L(n,e){return 0===e.indexOf(n)&&n!==e}function k(n,e){return n===e||L(n,e)||L(e,n)}function x(n){const e=n.lastIndexOf(\"-\");if(e>0)return n.slice(0,e);const{fallbackLocale:t}=h();return t&&!k(n,t)?t:null}function E(n){const e=n.split(\"-\").map((n,e,t)=>t.slice(0,e+1).join(\"-\")),{fallbackLocale:t}=h();return t&&!k(n,t)?e.concat(E(t)):e}function $(){return v}j.subscribe(n=>{v=n,\"undefined\"!=typeof window&&document.documentElement.setAttribute(\"lang\",n)});const D=j.set;j.set=n=>{if(function n(e){return null==e||a(e)?e:n(x(e))}(n)&&f(n)){const e=h().loadingDelay;let t;return\"undefined\"!=typeof window&&null!=$()&&e?t=window.setTimeout(()=>O.set(!0),e):O.set(!0),w(n).then(()=>{D(n)}).finally(()=>{clearTimeout(t),O.set(!1)})}return D(n)},j.update=n=>D(n(v));const I=(n,e)=>{const t=n.split(\"&\").find(n=>0===n.indexOf(`${e}=`));return t?t.split(\"=\").pop():null},N=(n,e)=>{const t=e.exec(n);return t&&t[1]||null},P=n=>\"undefined\"==typeof window?null:N(window.location.hostname,n),S=n=>\"undefined\"==typeof window?null:N(window.location.pathname,n),T=()=>\"undefined\"==typeof window?null:window.navigator.language||window.navigator.languages[0],A=n=>\"undefined\"==typeof window?null:I(window.location.search.substr(1),n),M=n=>\"undefined\"==typeof window?null:I(window.location.hash.substr(1),n),F={},Z=(n,e)=>{if(null==e)return null;const t=l(e,n);return t||Z(n,x(e))},C=(n,e)=>{if(e in F&&n in F[e])return F[e][n];const t=Z(n,e);return t?((n,e,t)=>t?(e in F||(F[e]={}),n in F[e]||(F[e][n]=t),t):t)(n,e,t):null},J=n=>{const e=Object.create(null);return t=>{const o=JSON.stringify(t);return o in e?e[o]:e[o]=n(t)}},U=(n,e)=>{const t=h().formats;if(n in t&&e in t[n])return t[n][e];throw new Error(`[svelte-i18n] Unknown \"${e}\" ${n} format.`)},_=J(n=>{var{locale:e,format:t}=n,o=p(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format numbers');return t&&(o=U(\"number\",t)),new Intl.NumberFormat(e,o)}),q=J(n=>{var{locale:e,format:t}=n,o=p(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format dates');return t?o=U(\"date\",t):0===Object.keys(o).length&&(o=U(\"date\",\"short\")),new Intl.DateTimeFormat(e,o)}),z=J(n=>{var{locale:e,format:t}=n,o=p(n,[\"locale\",\"format\"]);if(null==e)throw new Error('[svelte-i18n] A \"locale\" must be set to format time values');return t?o=U(\"time\",t):0===Object.keys(o).length&&(o=U(\"time\",\"short\")),new Intl.DateTimeFormat(e,o)}),B=(n={})=>{var{locale:e=$()}=n,t=p(n,[\"locale\"]);return _(Object.assign({locale:e},t))},G=(n={})=>{var{locale:e=$()}=n,t=p(n,[\"locale\"]);return q(Object.assign({locale:e},t))},H=(n={})=>{var{locale:e=$()}=n,t=p(n,[\"locale\"]);return z(Object.assign({locale:e},t))},K=J((n,e=$())=>new t(n,e,h().formats)),Q=(n,e={})=>{\"object\"==typeof n&&(n=(e=n).id);const{values:t,locale:o=$(),default:r}=e;if(null==o)throw new Error(\"[svelte-i18n] Cannot format a message without first setting the initial locale.\");const i=C(n,o);return i?t?K(i,o).format(t):i:(h().warnOnMissingMessages&&console.warn(`[svelte-i18n] The message \"${n}\" was not found in \"${E(o).join('\", \"')}\".${f($())?\"\\n\\nNote: there are at least one loader still registered to this locale that wasn't executed.\":\"\"}`),r||n)},R=(n,e)=>H(e).format(n),V=(n,e)=>G(e).format(n),W=(n,e)=>B(e).format(n),X=e([j,i],()=>Q),Y=e([j],()=>R),nn=e([j],()=>V),en=e([j],()=>W);function tn(n){return n}function on(n){return w(n||$()||h().initialLocale)}export{X as _,s as addMessages,nn as date,tn as defineMessages,i as dictionary,X as format,G as getDateFormatter,M as getLocaleFromHash,P as getLocaleFromHostname,T as getLocaleFromNavigator,S as getLocaleFromPathname,A as getLocaleFromQueryString,K as getMessageFormatter,B as getNumberFormatter,H as getTimeFormatter,y as init,O as isLoading,j as locale,c as locales,en as number,g as register,X as t,Y as time,on as waitLocale};\n","<script>\n  export let type;\n</script>\n\n<button class=\"{`bt-button ${$$props.class}`}\"\n        type=\"{type}\"\n        on:click>\n  <slot />\n</button>\n\n<style global lang=\"scss\">\n.bt-button {\n  height: 46px;\n  min-width: 100px;\n  padding: 0;\n  font-size: 16px;\n  color: var(--control-color);\n  cursor: pointer;\n  background: var(--button-background);\n  border: 1px solid transparent;\n  border-radius: 3px;\n  transition: color 0.125s, background 0.125s;\n  appearance: none;\n}\n</style>\n","<script>\n  export let value;\n\n  $: state = value ? 'play' : 'stop';\n</script>\n\n\n<div class=\"{`bt-play-stop-icon bt-play-stop-icon_${state}`}\" />\n\n<style global lang=\"scss\">\n.bt-play-stop-icon {\n  width: 100px;\n  height: 100px;\n  margin: 0 auto;\n  border: 50px solid #fff;\n  transition: all 0.125s linear;\n\n  &_play {\n    border-left-color: transparent;\n  }\n\n  &_stop {\n    border-color: #fff;\n  }\n}\n</style>\n","export const STATES = {\n  action: 'action',\n  break: 'break',\n  stopped: 'stopped',\n}\n","import { writable } from 'svelte/store';\nimport { STATES } from '../consts/states';\n\nexport const state = writable(STATES.stopped);\n","function setObject(scope, key, value) {\n  const currentScope = getObject(scope);\n  const updatedScope = {\n    ...currentScope,\n    [key]: value\n  };\n\n  localStorage.setItem(scope, JSON.stringify(updatedScope));\n}\n\nfunction getObject(scope, key) {\n  const lsItem = localStorage.getItem(scope);\n  let parsedScope;\n\n  if (!lsItem) {\n    return null;\n  }\n\n  try {\n    parsedScope = JSON.parse(localStorage.getItem(scope))\n  } catch (e) {\n    return key ? undefined : lsItem;\n  }\n\n  return key ? parsedScope[key] : parsedScope;\n}\n\nexport const lsHelper = {\n  set: (key, value) => localStorage.setItem(key, value),\n  get: key => localStorage.getItem(key),\n  setObject,\n  getObject,\n  clear: localStorage.clear,\n};\n","import { writable, derived } from 'svelte/store';\nimport { lsHelper } from '../utils/ls-helper';\n\nconst lsSettings = lsHelper.getObject('notification-settings');\n\nfunction getDefaultValue(lsKey, defaultValue) {\n  return lsSettings && lsSettings[lsKey] ? lsSettings[lsKey] : defaultValue;\n}\n\nexport const intervalTime = writable(getDefaultValue('interval', 15));\nexport const breakTime = writable(getDefaultValue('break', 15));\nexport const message = writable(getDefaultValue('message', ''));\nexport const sound = writable(getDefaultValue('sound', ''))\n\nexport const settingsWatcher = derived(\n  [intervalTime, breakTime, message, sound],\n  ([intervalTimeCb, breakTimeCb, messageCb, soundCb]) => {\n    if (intervalTimeCb < 1 || Number.isNaN(intervalTimeCb)) {\n      intervalTime.set(1);\n    }\n    if (breakTimeCb < 1 || Number.isNaN(breakTimeCb)) {\n      breakTime.set(1);\n    }\n\n    return {\n      intervalTime: intervalTimeCb,\n      breakTime: breakTimeCb,\n      message: messageCb,\n      sound: soundCb,\n    }\n  }\n);\n","<script>\n  import { _ } from 'svelte-i18n';\n\n  import Button from '../components/Button.svelte';\n  import PlayStopIcon from '../components/PlayStopIcon.svelte';\n\n  import {\n    STATES,\n  } from '../consts/states';\n  import {\n    state,\n  } from '../stores/state';\n  import {\n    intervalTime as storeIntervalTime,\n    breakTime as storeBreakTime,\n  } from '../stores/notification-settings';\n\n  let currentState;\n  let intervalTime;\n  let breakTime;\n\n  let actionCountdownStartedAt;\n  let breakCountdownStartedAt;\n  let actionTimerInterval;\n  let breakTimerInterval;\n  let fillHeight = 0;\n  let actionCountdown = 0;\n  let breakCountdown = 0;\n\n  $: actionRemainingTimeValue = actionCountdown > 1 ? Math.round(actionCountdown) : Math.round(actionCountdown * 60);\n  $: actionRemainingTimeLabel = actionCountdown > 1 ? 'panel.in_minutes' : 'panel.in_seconds';\n\n  const stateListener = state.subscribe(value => {\n    currentState = value;\n\n    switch (value) {\n      case STATES.action:\n        actionCountdownStartedAt = new Date().getTime();\n        fillHeight = 0;\n        stopBreakTimer();\n        startActionTimer();\n        break;\n      case STATES.stopped:\n        stopActionTimer();\n        stopBreakTimer();\n        resetCountdown();\n        fillHeight = 0;\n        break;\n      case STATES.break:\n        breakCountdownStartedAt = new Date().getTime();\n        stopActionTimer();\n        startBreakTimer();\n        fillHeight = 100;\n        break;\n    }\n  });\n  const intervalTimeListener = storeIntervalTime.subscribe(value => {\n    intervalTime = value;\n  });\n  const breakTimeListener = storeBreakTime.subscribe(value => {\n    breakTime = value;\n  })\n\n  function onButtonClick() {\n    state.set(currentState === STATES.stopped ? STATES.action : STATES.stopped);\n  }\n\n  function startActionTimer() {\n    updateActionCountdown();\n    actionTimerInterval = setInterval(updateActionCountdown, 1000);\n  }\n\n  function updateActionCountdown() {\n    const now = new Date().getTime();\n    const timeDiffMinutes = (now - actionCountdownStartedAt) / (1000 * 60);\n\n    actionCountdown = intervalTime - (timeDiffMinutes);\n    fillHeight = (timeDiffMinutes / intervalTime) * 100;\n  }\n\n  function stopActionTimer() {\n    clearInterval(actionTimerInterval);\n  }\n\n  function resetCountdown() {\n    actionCountdownStartedAt = NaN;\n    breakCountdownStartedAt = NaN;\n  }\n\n  function startBreakTimer() {\n    breakTimerInterval = setInterval(updateBreakCountdown, 1000);\n  }\n\n  function updateBreakCountdown() {\n    const now = new Date().getTime();\n    const timeDiffMinutes = (now - breakCountdownStartedAt) / 1000;\n\n    breakCountdown = breakTime - (timeDiffMinutes);\n  }\n\n  function stopBreakTimer() {\n    clearInterval(breakTimerInterval);\n  }\n</script>\n\n<div class=\"{`bt-panel ${$$props.class}`}\">\n  <Button class=\"bt-panel__button\"\n          on:click={onButtonClick}>\n    <PlayStopIcon value=\"{currentState === STATES.stopped}\" />\n    <div class=\"bt-panel__remaining-time\">\n      {#if currentState === STATES.stopped }\n        {$_('panel.start_timer')}\n      {:else if currentState === STATES.action }\n        {$_('panel.next_break_in')}\n        <span class=\"bt-panel__remaining-time-value\">\n          {actionRemainingTimeValue} {$_(actionRemainingTimeLabel)}\n        </span>\n      {:else }\n        {$_('panel.break_ends_in')}\n        <span class=\"bt-panel__remaining-time-value\">\n          {Math.round(breakCountdown)} {$_('panel.in_seconds')}\n        </span>\n      {/if}\n    </div>\n  </Button>\n  <div class=\"bt-panel__countdown-line\"\n       style=\"{`height: ${fillHeight}%`}\" />\n</div>\n\n<style global lang=\"scss\">\n.bt-panel {\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  &__button {\n    display: block;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    font-size: 18px;\n    color: var(--action-button-color);\n    background: var(--action-button-background);\n    border-radius: 0;\n    transition: all 0.125s;\n\n    &:hover {\n      background: var(--action-button-background_hover);\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  &__remaining-time {\n    height: 56px;\n    margin-top: 10px;\n    font-size: 20px;\n  }\n\n  &__remaining-time-value {\n    display: block;\n    font-size: 24px;\n  }\n\n  &__countdown-line {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 0;\n    background: var(--countdown-background);\n    transition: height 0.125s linear;\n    pointer-events: none;\n  }\n}\n</style>\n","<script>\n  export let type;\n  export let placeholder;\n  export let value;\n  export let min;\n</script>\n\n<input class=\"{`bt-input ${$$props.class}`}\"\n       type=\"{type}\"\n       placeholder=\"{placeholder}\"\n       min=\"{min}\"\n       value={value}\n       on:input>\n\n<style global lang=\"scss\">\n.bt-input {\n  height: 38px;\n  min-width: 100px;\n  padding: 0 10px;\n  font-size: 16px;\n  color: var(--control-color);\n  background: var(--control-background);\n  border: 1px solid var(--control-border-color);\n  border-radius: 3px;\n  transition: all 0.125s;\n  appearance: none;\n\n  &:hover,\n  &:focus {\n    border-color: var(--control-border-color_hover);\n  }\n\n  &::placeholder {\n  }\n}\n</style>\n","<script>\n  export let value;\n</script>\n\n<select class=\"{`bt-select ${$$props.class}`}\"\n        value=\"{value}\"\n        on:input>\n  <slot />\n</select>\n\n<style global lang=\"scss\">\n.bt-select {\n  height: 38px;\n  min-width: 100px;\n  padding: 0 10px;\n  font-size: 16px;\n  color: var(--control-color);\n  background: var(--control-background);\n  border: 1px solid var(--control-border-color);\n  border-radius: 3px;\n  transition: all 0.125s;\n\n  &:hover,\n  &:focus {\n    border-color: var(--control-border-color_hover);\n  }\n\n  &::placeholder {\n  }\n}\n</style>\n","export const SOUNDS_PATH = 'sounds'\n\nexport const SOUNDS = [\n  {\n    id: '1',\n    name: 'Beyond Doubt',\n    mp3: `${SOUNDS_PATH}/beyond-doubt.mp3`,\n    ogg: `${SOUNDS_PATH}/beyond-doubt.ogg`,\n  },\n  {\n    id: '2',\n    name: 'Time is Now',\n    mp3: `${SOUNDS_PATH}/time-is-now.mp3`,\n    ogg: `${SOUNDS_PATH}/time-is-now.ogg`,\n  },\n  {\n    id: '3',\n    name: 'Unconvinced',\n    mp3: `${SOUNDS_PATH}/unconvinced.mp3`,\n    ogg: `${SOUNDS_PATH}/unconvinced.ogg`,\n  },\n  {\n    id: '4',\n    name: 'Intuition',\n    mp3: `${SOUNDS_PATH}/intuition.mp3`,\n    ogg: `${SOUNDS_PATH}/intuition.ogg`,\n  },\n  {\n    id: '5',\n    name: 'Pull Out',\n    mp3: `${SOUNDS_PATH}/pull-out.mp3`,\n    ogg: `${SOUNDS_PATH}/pull-out.ogg`,\n  },\n  {\n    id: '6',\n    name: 'Open Ended',\n    mp3: `${SOUNDS_PATH}/open-ended.mp3`,\n    ogg: `${SOUNDS_PATH}/open-ended.ogg`,\n  }\n];\n","export const LANGUAGES = [\n  {\n    name: 'Русский',\n    translate: 'constants.languages.russian',\n    value: 'ru',\n  },\n  {\n    name: 'English',\n    translate: 'constants.languages.english',\n    value: 'en',\n  },\n];\n","import { _ } from 'svelte-i18n';\n\nexport const THEMES = [\n  {\n    name: 'Светлая тема',\n    translate: 'constants.themes.light',\n    value: 'light',\n  },\n  {\n    name: 'Темная тема',\n    translate: 'constants.themes.dark',\n    value: 'dark',\n  }\n];\n","const MEDIA_QUERY_NAME = 'prefers-color-scheme';\n\nexport class ThemeCatcher {\n  constructor() {}\n\n  get isLightTheme() {\n    return this.checkMediaMatch('light');\n  }\n\n  get isDarkTheme() {\n    return this.checkMediaMatch('dark');\n  }\n\n  checkMediaMatch(name) {\n    return window.matchMedia(`(${MEDIA_QUERY_NAME}: ${name})`).matches;\n  }\n}\n","import { writable } from 'svelte/store';\n\nimport {\n  lsHelper,\n} from '../utils/ls-helper';\nimport  {\n  ThemeCatcher,\n} from '../utils/theme-catcher';\n\nimport {\n  LANGUAGES,\n} from '../consts/languages';\n\nconst lsSettings = lsHelper.getObject('app-settings');\n\nfunction getDefaultLanguage() {\n  const availableLanguages = LANGUAGES.map(lang => lang.value);\n  const systemLanguage = navigator.language.split('-')[0];\n\n  if (lsSettings && lsSettings.language) {\n    return availableLanguages.includes(lsSettings.language) ? lsSettings.language : 'ru';\n  }\n\n  return availableLanguages.includes(systemLanguage) ? systemLanguage : 'ru';\n}\n\nfunction getDefaultTheme() {\n  const systemTheme = new ThemeCatcher().isLightTheme ? 'light' : 'dark';\n\n  if (lsSettings && lsSettings.theme) {\n    return lsSettings.theme;\n  }\n\n  return systemTheme;\n}\n\nexport const language = writable(getDefaultLanguage());\nexport const theme = writable(getDefaultTheme());\n","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { _ } from 'svelte-i18n';\n\n  import {\n    lsHelper,\n  } from '../utils/ls-helper';\n\n  import Input from '../components/Input.svelte';\n  import Select from '../components/Select.svelte';\n  import Button from '../components/Button.svelte';\n\n  import { SOUNDS } from '../consts/sounds';\n  import { LANGUAGES } from '../consts/languages';\n  import { THEMES } from '../consts/themes';\n\n  import {\n    intervalTime as storeIntervalTime,\n    breakTime as storeBreakTime,\n    message as storeMessage,\n    sound as storeSound,\n  } from '../stores/notification-settings';\n  import {\n    theme as storeTheme,\n    language as storeLanguage,\n  } from '../stores/app-settings';\n\n  const dispatch = createEventDispatcher();\n\n  let intervalTime;\n  let breakTime;\n  let message;\n  let sound;\n\n  let theme;\n  let language;\n\n  const intervalTimeListener = storeIntervalTime.subscribe(value => {\n    intervalTime = value;\n  });\n  const breakTimeListener = storeBreakTime.subscribe(value => {\n    breakTime = value;\n  });\n  const messageListener = storeMessage.subscribe(value => {\n    message = value;\n  });\n  const soundListener = storeSound.subscribe(value => {\n    sound = value;\n  });\n  const themeListener = storeTheme.subscribe(value => {\n    theme = value;\n  });\n  const languageListener = storeLanguage.subscribe(value => {\n    language = value;\n  });\n\n  function onIntervalChange(event) {\n    const value = parseInt(event.target.value);\n\n    storeIntervalTime.set(value)\n    lsHelper.setObject('notification-settings', 'interval', value);\n  }\n\n  function onBreakChange(event) {\n    const value = parseInt(event.target.value);\n\n    storeBreakTime.set(value)\n    lsHelper.setObject('notification-settings', 'break', value);\n  }\n\n  function onMessageChange(event) {\n    const { value } = event.target;\n\n    storeMessage.set(event.target.value);\n    lsHelper.setObject('notification-settings', 'message', value);\n  }\n\n  function onSoundSelect(event) {\n    const { value } = event.target;\n\n    storeSound.set(value);\n    lsHelper.setObject('notification-settings', 'sound', value);\n  }\n\n  function onLanguageSelect(event) {\n    const { value } = event.target;\n\n    storeLanguage.set(value);\n    lsHelper.setObject('app-settings', 'language', value);\n    location.search = `lang=${value}`;\n  }\n\n  function onThemeSelect(event) {\n    const { value } = event.target;\n\n    storeTheme.set(value);\n    lsHelper.setObject('app-settings', 'theme', value);\n  }\n\n  function dispatchRunExample(entity) {\n    dispatch('run-example', { entity });\n  }\n\n  function playSound(){\n    document.getElementById('bt-sound-audio').play();\n  }\n</script>\n\n<div class=\"{`bt-settings ${$$props.class}`}\">\n  <form class=\"bt-settings__form\">\n    <h2 class=\"bt-settings__sub-header\">{$_('notification_settings.caption')}</h2>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('notification_settings.interval_label')}</label>\n      <Input class=\"bt-settings__control\"\n             type=\"number\"\n             placeholder=\"{$_('notification_settings.interval_label')}\"\n             min=\"1\"\n             value={intervalTime}\n             on:input={onIntervalChange} />\n    </div>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('notification_settings.break_label')}</label>\n      <Input class=\"bt-settings__control\"\n             type=\"number\"\n             placeholder=\"{$_('notification_settings.break_label')}\"\n             min=\"1\"\n             value={breakTime}\n             on:input={onBreakChange} />\n    </div>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('notification_settings.message_label')}</label>\n      <Input class=\"bt-settings__control\"\n             placeholder=\"{$_('notification_settings.message_label')}\"\n             value={message}\n             on:input={onMessageChange} />\n    </div>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('notification_settings.sound_label')}</label>\n      <div class=\"bt-settings__row-splitter\">\n        <Select class=\"bt-settings__control\"\n                value=\"{sound}\"\n                on:input={onSoundSelect}>\n          <option value=\"''\">{$_('constants.sounds.no_sound')}</option>\n          {#each SOUNDS as sound }\n            <option value=\"{sound.id}\">{sound.name}</option>\n          {/each}\n        </Select>\n        <Button class=\"bt-settings__button bt-settings__button_sound-sample\"\n                type=\"button\"\n                on:click={() => dispatchRunExample('sound')}>\n          <span class=\"bt-start-icon\" />\n        </Button>\n      </div>\n    </div>\n    <div class=\"bt-settings__row\">\n      <Button class=\"bt-settings__button bt-settings__button_notification-sample\"\n              type=\"button\"\n              on:click={() => dispatchRunExample('notification')}>\n        {$_('notification_settings.show_notification')}\n      </Button>\n    </div>\n  </form>\n\n  <form class=\"bt-settings__form\">\n    <h2 class=\"bt-settings__sub-header\">{$_('app_settings.caption')}</h2>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('app_settings.language_label')}</label>\n      <Select class=\"bt-settings__control\"\n              value=\"{language}\"\n              on:input={onLanguageSelect}>\n        {#each LANGUAGES as language }\n          <option value=\"{language.value}\">{$_(`${language.translate}`)}</option>\n        {/each}\n      </Select>\n    </div>\n    <div class=\"bt-settings__row\">\n      <label class=\"bt-settings__label\">{$_('app_settings.theme_label')}</label>\n      <Select class=\"bt-settings__control\"\n              value=\"{theme}\"\n              on:input={onThemeSelect}>\n        {#each THEMES as theme }\n          <option value=\"{theme.value}\">{$_(`${theme.translate}`)}</option>\n        {/each}\n      </Select>\n    </div>\n  </form>\n</div>\n\n<style global lang=\"scss\">\n.bt-settings {\n  width: 100%;\n\n  &__form {\n\n  }\n\n  &__sub-header {\n    display: block;\n    font-size: 20px;\n    padding-bottom: 10px;\n    margin: 20px 0;\n    border-bottom: 1px solid var(--panel-border-color);\n  }\n\n  &__row {\n    margin-bottom: 10px;\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n\n  &__label {\n    display: block;\n    margin-bottom: 5px;\n  }\n\n  &__row-splitter {\n    display: flex;\n    align-content: center;\n  }\n\n  &__control {\n    width: 100%;\n  }\n\n  &__button {\n    &_sound-sample {\n      height: 38px;\n      min-width: unset;\n      margin-left: 10px;\n      padding: 0 10px;\n      color: var(--text-color);\n\n      .bt-start-icon {\n        display: block;\n        width: 0;\n        height: 0;\n        margin: 0 auto;\n        transform: translateX(5px);\n        border: 8px solid transparent;\n        border-left-color: currentColor;\n      }\n    }\n\n    &_notification-sample {\n      width: 100%;\n    }\n  }\n}\n</style>\n","<script>\n  export let href;\n  export let target = '_blank';\n</script>\n\n<a class=\"{`bt-link ${$$props.class}`}\"\n   href=\"{href}\"\n   target=\"{target}\">\n  <slot />\n</a>\n\n<style global lang=\"scss\">\n.bt-link {\n  color: currentColor;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n</style>\n","<script>\n  import Link from '../components/Link.svelte';\n</script>\n\n<ul class=\"{`bt-links ${$$props.class}`}\">\n  <li class=\"bt-links__item\">\n    <Link href=\"http://github.com/nbrylevv/breaktify-web-app\">\n      GitHub\n    </Link>\n  </li>\n</ul>\n\n<style global lang=\"scss\">\n.bt-links {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  padding: 0;\n  margin: 0;\n  font-size: 14px;\n  color: #696969;\n  list-style: none;\n}\n</style>\n","<script>\n  import { _ } from 'svelte-i18n';\n</script>\n\n<div>\n  {$_('no_browser_support.your_browser_doesnt_support_notification')}.<br>\n  {$_('no_browser_support.update_and_come_back')} :)\n</div>\n","export class Notifications {\n\n  constructor() {\n    this.currentNotification = null;\n  }\n\n  get hasBrowserSupport() {\n    return \"Notification\" in window;\n  }\n\n  get hasPermission() {\n    return Notification.permission === 'granted';\n  }\n\n  get permissionStatus() {\n    return Notification.permission;\n  }\n\n  requestPermission(callback) {\n    Notification.requestPermission().then((permission) => {\n      if (callback && typeof callback === 'function') {\n        callback(permission);\n      }\n    });\n  }\n\n  create(text, options) {\n    if (this.hasPermission) {\n      this.close();\n      this.currentNotification = new Notification(text, options || void 0);\n      this.currentNotification.onclick = () => {\n        this.close();\n      };\n    }\n  }\n\n  close() {\n    if (this.currentNotification) {\n      this.currentNotification.close();\n      this.currentNotification = null;\n    }\n  }\n}\n","<script>\n  import { _ } from 'svelte-i18n';\n\n  import Button from '../components/Button.svelte';\n\n  import {\n    Notifications,\n  } from '../utils/notifications';\n\n  const notifications = new Notifications();\n\n  function requestPermissionCallback(permission) {\n    if (permission === 'granted') {\n      location.reload();\n    }\n  }\n</script>\n\n<div class=\"bt-allow-notify\">\n  {#if notifications.permissionStatus === 'denied' }\n    <div class=\"bt-allow-notify__arrow\">\n      <span class=\"bt-allow-notify__arrow-message\">{$_('allow_notifications.allow')}</span>\n    </div>\n  {/if}\n  <div class=\"bt-allow-notify__message\">\n    {#if notifications.permissionStatus === 'denied' }\n      {$_('allow_notifications.to_use_app_you_need_allow_notifications')}\n    {:else}\n      {$_('allow_notifications.you_need_allow_notifications')}\n      <Button on:click={() => notifications.requestPermission(requestPermissionCallback)}\n              class=\"bt-button_blue bt-allow-notify__button\">\n        {$_('allow_notifications.allow')}\n      </Button>\n    {/if}\n  </div>\n</div>\n\n<style global lang=\"scss\">\n.bt-allow-notify {\n  &__arrow {\n    position: fixed;\n    top: 10px;\n    left: 104px;\n    width: 102px;\n    height: 120px;\n    background: url('images/notification-arrow-top.png');\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  &__arrow-message {\n    position: absolute;\n    top: 100%;\n    left: 100%;\n    margin-top: -16px;\n    margin-left: 10px;\n    font-size: 22px;\n    font-style: italic;\n    color: #4a4a4a;\n  }\n\n  &__message {\n    font-size: 20px;\n  }\n\n  &__button {\n    display: block;\n    margin: 10px auto 0;\n  }\n}\n</style>\n","<script>\n\timport { onMount } from 'svelte';\n\n\timport Panel from './views/Panel.svelte';\n\timport Settings from './views/Settings.svelte';\n\timport Links from './views/Links.svelte';\n\timport NoBrowserSupport from './views/NoBrowserSupport.svelte';\n\timport AllowNotifications from './views/AllowNotifications.svelte';\n\n\timport {\n\t\tsettingsWatcher,\n\t\tsound as storeSound,\n\t} from './stores/notification-settings';\n\timport {\n\t\ttheme,\n\t} from './stores/app-settings';\n\timport {\n\t\tstate,\n\t} from './stores/state';\n\n\timport {\n\t\tNotifications,\n\t} from './utils/notifications';\n\t// import {\n\t// \tDocumentFavicon,\n\t// } from './utils/document-favicon';\n\n\timport {\n\t\tSTATES,\n\t} from './consts/states';\n\timport {\n\t\tFAVICONS,\n\t} from './consts/favicons';\n\timport {\n\t\tSOUNDS,\n\t} from './consts/sounds';\n\n\tconst notifications = new Notifications();\n\t// const documentFavicon = new DocumentFavicon();\n\n\tlet isMounted = false;\n\n\tlet actionTimerId = null;\n\tlet breakTimerId = null;\n\tlet settings = {};\n\tlet currentState = null;\n\n \tconst settingsListener = settingsWatcher.subscribe(value => {\n \t\tsettings = value;\n\t\tstate.set(STATES.stopped);\n\t});\n\tconst soundListener = storeSound.subscribe(value => {\n\t\tif (isMounted) {\n\t\t\tapplySound(value);\n\t\t}\n\t});\n\n\tonMount(() => {\n\t\tisMounted = true;\n\t\tapplySound(settings.sound);\n\t});\n\n \tconst stateListener = state.subscribe(value => {\n \t\tcurrentState = value;\n\n \t\tswitch (value) {\n\t\t\tcase STATES.action:\n\t\t\t\t// documentFavicon.update(FAVICONS[value]);\n\t\t\t\tif (!actionTimerId) {\n\t\t\t\t\tstartActionTimer();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase STATES.stopped:\n\t\t\t\t// documentFavicon.update(FAVICONS[value]);\n\t\t\t\tstopActionTimer();\n\t\t\t\tstopBreakTimer();\n\t\t\t\tbreak;\n\t\t\tcase STATES.break:\n\t\t\t\t// documentFavicon.update(FAVICONS[value]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n \tconst themeListener = theme.subscribe(value => applyTheme(value));\n\n \tfunction startActionTimer() {\n \t\tstopActionTimer();\n\n \t\tif (currentState !== STATES.action) {\n\t\t\tstate.set(STATES.action);\n\t\t}\n\n\t\tactionTimerId = setInterval(() => {\n\t\t\tnotificate();\n\t\t\tstartBreakTimer();\n\t\t}, settings.intervalTime * 1000 * 60);\n\t}\n\n\tfunction stopActionTimer(changeStatus = false) {\n\t\tclearInterval(actionTimerId);\n\n\t\tif (changeStatus) {\n\t\t\tstate.set(STATES.stopped);\n\t\t}\n\t}\n\n\tfunction startBreakTimer() {\n \t\tstate.set(STATES.break);\n \t\tstopActionTimer();\n\n\t\tbreakTimerId = setTimeout(() => {\n\t\t\tstopBreakTimer();\n\t\t\tstartActionTimer();\n\t\t}, settings.breakTime * 1000)\n\t}\n\n\tfunction stopBreakTimer() {\n \t\tclearTimeout(breakTimerId);\n\t}\n\n\tfunction notificate() {\n \t\tif (settings.sound) {\n \t\t\tplaySound();\n\t\t}\n\n\t\tnotifications.create('Breaktify!', {\n\t\t\tbody: `${settings.message || ''}`,\n\t\t\t// image: './images/palm.png', // app-logo\n\t\t\ticon: './images/favicon.png',\n\t\t});\n\t}\n\n\tfunction applyTheme(value) {\n \t\tconst lightThemeClass = 'theme_light';\n \t\tconst darkThemeClass = 'theme_dark';\n\n \t\tif (value === 'light') {\n \t\t\tdocument.body.classList.add(lightThemeClass);\n\t\t\tdocument.body.classList.remove(darkThemeClass);\n\t\t} else {\n\t\t\tdocument.body.classList.add(darkThemeClass);\n\t\t\tdocument.body.classList.remove(lightThemeClass);\n\t\t}\n\t}\n\n\tfunction applySound(soundId) {\n\t\tconst selectedSound = SOUNDS.find(_ => _.id === soundId);\n\n\t\tif (!document.getElementById('bt-sound-wrapper')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!selectedSound) {\n\t\t\tdocument.getElementById('bt-sound-wrapper').innerHTML = '';\n\t\t\treturn;\n\t\t}\n\n\t\tconst mp3Source = '<source src=\"' + selectedSound.mp3 + '\" type=\"audio/mpeg\">';\n\t\tconst oggSource = '<source src=\"' + selectedSound.ogg + '\" type=\"audio/ogg\">';\n\t\tdocument.getElementById('bt-sound-wrapper').innerHTML='<audio id=\"bt-sound-audio\">' + mp3Source + oggSource + '</audio>';\n\t}\n\n\tfunction playSound() {\n \t\tconst audio = document.getElementById('bt-sound-audio');\n\n \t\taudio.currentTime = 0;\n\t\taudio.play();\n\t}\n\n\tfunction runExample(event) {\n \t\tconst { entity } = event.detail;\n\n \t\tswitch (entity) {\n\t\t\tcase 'sound':\n\t\t\t\tplaySound();\n\t\t\t\tbreak;\n\t\t\tcase 'notification':\n\t\t\t\tnotificate();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n</script>\n\n<main class=\"bt-app\">\n\t<div class=\"bt-layout\">\n\t\t{#if !notifications.hasBrowserSupport }\n\t\t\t<NoBrowserSupport />\n\t\t{:else if !notifications.hasPermission }\n\t\t\t<AllowNotifications />\n\t\t{:else}\n\t\t\t<div class=\"bt-layout__side bt-layout__side_left\">\n\t\t\t\t<Panel class=\"bt-app__panel\" />\n\t\t\t</div>\n\t\t\t<div class=\"bt-layout__side bt-layout__side_right\">\n\t\t\t\t<div class=\"bt-app__header\">Breaktify!</div>\n\t\t\t\t<Settings class=\"bt-app__settings\"\n\t\t\t\t\t\t\t\t\ton:run-example={runExample} />\n\t\t\t\t<Links class=\"bt-app__links\" />\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n\t<div id=\"bt-sound-wrapper\"\n\t\t\t class=\"bt-app__sound\">\n\t</div>\n</main>\n\n<style global lang=\"scss\">\n@import \"./assets/scss/app\";\n@import \"./assets/scss/mixins\";\n\n.bt-app {\n\tdisplay: flex;\n\twidth: 100vw;\n\tmin-height: 100vh;\n\n\t.bt-app__links {\n\t\tmargin-top: 20px;\n\t}\n\n\t&__header {\n\t\tmargin-top: 0;\n\t\tfont-size: 42px;\n\t}\n\n\t&__sound {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\twidth: 0;\n\t\theight: 0;\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n\n\t@include desktop {\n\t\theight: 100vh;\n\t}\n}\n\n.bt-layout {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\n\t&__side {\n\t\tdisplay: inline-flex;\n\t\theight: 100%;\n\n\t\t&_left {\n\t\t\tjustify-content: center;\n\t\t\twidth: 100%;\n\t\t\tmin-height: 300px;\n\t\t}\n\n\t\t&_right {\n\t\t\tflex-direction: column;\n\t\t\twidth: 100%;\n\t\t\tpadding: 20px;\n\t\t\tbackground: var(--panel-background);\n\t\t\tborder-left: 1px solid var(--panel-border-color);\n\t\t}\n\t}\n\n\t@include desktop {\n\t\tflex-direction: row;\n\n\t\t&__side {\n\t\t\t&_left {\n\t\t\t\tmin-height: 0;\n\t\t\t}\n\n\t\t\t&_right {\n\t\t\t\tflex: 1 0 380px;\n\t\t\t\twidth: 380px;\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-y: auto;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n","import {\n  addMessages,\n  init,\n  getLocaleFromQueryString,\n} from 'svelte-i18n'\nimport {\n  lsHelper,\n} from '../utils/ls-helper';\n\nimport ru from '../locales/ru.json'\nimport en from '../locales/en.json'\n\naddMessages('ru', ru);\naddMessages('en', en);\n\ninit({\n  fallbackLocale: 'en',\n  initialLocale: getLocaleFromQueryString('lang') || lsHelper.getObject('app-settings', 'language') || 'ru',\n})\n","import App from './App.svelte';\n\nimport * as i18n from './plugins/i18n';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","p","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","TYPE","isLiteralElement","el","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isNumberSkeleton","isDateTimeSkeleton","extendStatics","__extends","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","prototype","__assign","t","n","arguments","apply","SyntaxError","_super","message","expected","found","location","_this","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","escapedParts","parts","part","inverted","description","expected1","j","descriptions","sort","join","describeExpected","found1","pegParse","input","peg$result","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c3","peg$literalExpectation","peg$c5","peg$otherExpectation","peg$c7","peg$c9","peg$c11","peg$c12","peg$c13","peg$classExpectation","peg$c14","peg$c15","peg$c17","peg$c19","peg$c23","peg$c26","style","messageCtx","peg$c28","peg$c30","peg$c31","insertLocation","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c43","peg$c45","peg$c47","peg$c49","peg$c51","peg$c54","peg$c57","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c71","peg$c74","peg$c76","peg$c79","x","isInPluralOption","peg$c81","peg$c83","peg$c84","peg$c86","peg$c88","peg$c89","peg$c90","peg$c91","peg$c93","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","error","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$parsemessage","s0","s1","peg$parsemessageElement","peg$parsemessageText","messageText","peg$parseliteralElement","s3","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","s2","peg$parsenumberSkeletonToken","tokens","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","reduce","all","_a","id","optionLocation","peg$c52","peg$parsepluralElement","peg$parseselectOption","peg$c55","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenumberSkeletonId","s4","peg$parsewhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c20","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$c82","peg$parseescapedChar","parseInt","captureLocation","__spreadArrays","il","r","jl","PLURAL_HASHTAG_REGEX","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","match","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","opt","signOpts","convertNumberSkeletonToNumberFormatOptions","_i","tokens_1","token","currency","useGrouping","maximumFractionDigits","unit","notation","compactDisplay","currencyDisplay","unitDisplay","minimumFractionDigits","parse","opts","els","normalizeHashtagInPlural","keys","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","getCacheId","inputs","JSON","stringify","obj","domParser","memoizeFormatConstructor","FormatConstructor","cache","args","cacheId","format","bind","FormatError","msg","variableId","formatToParts","locales","formatters","formats","currentPluralValue","originalMessage","els_1","getNumberFormat","varName","String","getDateTimeFormat","other","Intl","PluralRules","rule","getPluralRules","lastPart","TOKEN_REGEX","counter","restoreRichPlaceholderMessage","objectParts","split","Boolean","SIMPLE_XML_REGEX","TEMPLATE_ID","Date","now","VOID_ELEMENTS","formatHTMLMessage","formattedMessage","DOMParser","content","parseFromString","getElementById","tagsToFormat","getElementsByTagName","caseSensitiveTags","tagName","toLowerCase","child","concat","formatHTMLElement","outerHTML","textContent","isVoidElement","formatFnOrValue","chunks","mergeConfigs","defaultConfig","configs","c1","c2","IntlMessageFormat","overrideFormats","defaultLocale","formatterCache","dateTime","pluralRules","formatToString","ast","resolvedOptions","locale","NumberFormat","supportedLocalesOf","getAst","__parse","TypeError","memoizeIntlConstructor","DateTimeFormat","percent","short","medium","long","full","u","f","E","reverse","some","getOwnPropertySymbols","propertyIsEnumerable","fallbackLocale","initialLocale","loadingDelay","scientific","engineering","compactLong","compactShort","warnOnMissingMessages","h","O","v","L","lastIndexOf","$","window","documentElement","D","setTimeout","default","w","finally","clearTimeout","F","Z","J","U","q","z","K","Q","C","console","warn","R","H","V","G","W","B","X","class","state","STATES","getObject","scope","key","lsItem","localStorage","getItem","parsedScope","lsHelper","setItem","get","setObject","updatedScope","lsSettings","getDefaultValue","lsKey","defaultValue","intervalTime","breakTime","sound","settingsWatcher","intervalTimeCb","breakTimeCb","messageCb","soundCb","Number","isNaN","round","currentState","actionCountdownStartedAt","breakCountdownStartedAt","actionTimerInterval","breakTimerInterval","fillHeight","actionCountdown","breakCountdown","getTime","stopBreakTimer","updateActionCountdown","setInterval","stopActionTimer","NaN","updateBreakCountdown","storeIntervalTime","storeBreakTime","timeDiffMinutes","clearInterval","actionRemainingTimeValue","actionRemainingTimeLabel","placeholder","min","SOUNDS","mp3","ogg","LANGUAGES","translate","THEMES","ThemeCatcher","isLightTheme","checkMediaMatch","isDarkTheme","matchMedia","matches","language","availableLanguages","lang","systemLanguage","navigator","includes","getDefaultLanguage","theme","systemTheme","getDefaultTheme","onIntervalChange","onBreakChange","onMessageChange","onSoundSelect","onLanguageSelect","onThemeSelect","storeMessage","storeSound","storeLanguage","search","storeTheme","dispatch","intervalTimeListener","breakTimeListener","messageListener","soundListener","themeListener","languageListener","dispatchRunExample","entity","href","Notifications","currentNotification","hasBrowserSupport","hasPermission","Notification","permission","permissionStatus","requestPermission","close","onclick","requestPermissionCallback","reload","notifications","applySound","soundId","selectedSound","find","innerHTML","mp3Source","oggSource","playSound","audio","currentTime","play","isMounted","actionTimerId","breakTimerId","settings","startActionTimer","body","classList","remove","applyTheme","notificate","changeStatus","icon","en","I"],"mappings":"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"}